<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd"
        >
<!--全局配置
web.xml:每个javaEE项目中都会有，web.xml文件是用来初始化配置信息-->
<web-app>
  <display-name>Archetype Created Web Application</display-name>
  <welcome-file-list>
    <!--welcome file就是加载时默认加载的页面-->
    <welcome-file>/index.html</welcome-file>
  </welcome-file-list>
  <servlet-mapping>
    <!-- 让 tomcat 的默认 servlet 处理静态资源
    除了Jsp页面之外，都由它处理-->
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
    <url-pattern>*.png</url-pattern>
    <url-pattern>*.gif</url-pattern>
    <url-pattern>*.css</url-pattern>
    <url-pattern>*.js</url-pattern>
    <url-pattern>*.swf</url-pattern>
    <url-pattern>*.pdf</url-pattern>
    <url-pattern>*.java</url-pattern>
    <url-pattern>*.class</url-pattern>
    <url-pattern>*.xls</url-pattern>
    <url-pattern>*.xlsx</url-pattern>
    <url-pattern>*.et</url-pattern>
    <url-pattern>*.vm</url-pattern>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>
  <!--配置Spring的监听器，默认只加载WEB-INF目录下的applicationContext.xml配置文件
  ContextLoaderListener的作用就是启动Web容器时，自动装配ApplicationContext的配置信息。-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--设置配置文件的路径-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <!--配置前端控制器-->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--加载springmvc.xml配置文件-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
    <!--启动服务器，创建该servlet-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <!--
    <url-pattern>/ </ url-pattern > 不会匹配到*.jsp，由JspServlet（tomcat中默认的web.xml中配置的）拦截处理，即*.jsp不会进入spring的 DispatcherServlet类 。
    2、在配置了< url-pattern > /* </ url-pattern >的情况下自然会拦截所有请求（包括/login,*.jsp,*.js和*.html等）
    JspServlet:
    org.apache.jasper.servlet,Class JspServlet：
    The JSP engine (a.k.a Jasper).
    The servlet container is responsible for providing a URLClassLoader for the web application context Jasper is being used in.
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <!--解决中文乱码的过滤器-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <!-- 拦截所有请求
    This filter can either apply its encoding if the request does not already specify an encoding, or enforce this filter's encoding in any case
    -->
    <url-pattern>/*</url-pattern>
  </filter-mapping>

</web-app>